#!/bin/bash

# Script de d√©ploiement rapide pour l'application Cloud Project
# Usage: ./deploy.sh [environment]

set -e

ENVIRONMENT=${1:-production}
PLAYBOOK="deploy.yml"
INVENTORY="inventory.yml"

echo "üöÄ D√©marrage du d√©ploiement pour l'environnement: $ENVIRONMENT"
echo "=================================================="

# V√©rification des pr√©requis
if ! command -v ansible-playbook &> /dev/null; then
    echo "‚ùå Ansible n'est pas install√©. Installation..."
    if [[ "$OSTYPE" == "darwin"* ]]; then
        brew install ansible
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        sudo apt update && sudo apt install -y ansible
    else
        echo "Veuillez installer Ansible manuellement"
        exit 1
    fi
fi

# V√©rification de la connectivit√©
echo "üîç V√©rification de la connectivit√© vers les serveurs..."
ansible all -i $INVENTORY -m ping

if [ $? -eq 0 ]; then
    echo "‚úÖ Connectivit√© OK"
else
    echo "‚ùå Probl√®me de connectivit√©. V√©rifiez votre configuration SSH."
    exit 1
fi

# Ex√©cution du playbook
echo "üì¶ Lancement du d√©ploiement..."
ansible-playbook -i $INVENTORY $PLAYBOOK -v

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ D√©ploiement termin√© avec succ√®s !"
    echo ""
    echo "üåê Votre application est maintenant accessible sur :"
    echo "   - http://IP_DE_VOTRE_VM:8080"
    echo ""
    echo "üìã Commandes utiles :"
    echo "   - Voir les logs: ansible all -i $INVENTORY -a 'docker logs cloudproject-php-web'"
    echo "   - Red√©marrer: ansible all -i $INVENTORY -a 'docker-compose -f /opt/cloudproject/docker-compose.yml restart'"
    echo "   - Status: ansible all -i $INVENTORY -a 'docker ps'"
else
    echo "‚ùå √âchec du d√©ploiement. Consultez les logs ci-dessus."
    exit 1
fi
